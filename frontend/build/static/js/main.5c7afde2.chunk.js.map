{"version":3,"sources":["components/UploadModal.js","components/NavigationBar.js","components/EthAccountBar.js","web3-helpers.js","App.js","reportWebVitals.js","index.js"],"names":["UploadModal","showModal","toggleUploadModal","Modal","Dialog","className","Header","closeButton","onHide","Title","Body","Form","Group","Label","Control","type","placeholder","Check","inline","label","id","style","display","File","onClick","e","preventDefault","role","Footer","NavigationBar","searchIPFS","useState","searchText","setSearchText","InputGroup","FormControl","onChange","target","value","Append","variant","htmlFor","EthAccountBar","userAccount","Alert","size","string","href","loadWeb3","a","window","ethereum","web3","Web3","enable","currentProvider","getAccount","eth","getAccounts","account","getFileTransferContract","getInbox","contract","ipfsClient","host","port","protocol","App","setAccount","setContract","setSearchTerm","setShowModal","useEffect","ipfsInbox","searchTerm","String","trim","Jumbotron","fluid","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ioBAIaA,EAAc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,kBAGrC,OAAOD,EACH,eAACE,EAAA,EAAMC,OAAP,CAAcC,UAAU,eAAxB,UACI,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAACC,OAAQN,EAAlC,SACI,cAACC,EAAA,EAAMM,MAAP,qCAGJ,cAACN,EAAA,EAAMO,KAAP,UACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,CAAYR,UAAU,cAAtB,wBACA,cAACM,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,cACtC,cAACL,EAAA,EAAKE,MAAN,CAAYR,UAAU,cAAtB,wBACA,cAACM,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,MAAM,QAAQJ,KAAK,WAAWK,GAAG,sBACpD,cAACT,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,MAAM,QAAQJ,KAAK,WAAWK,GAAG,sBACpD,cAACT,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,MAAM,QAAQJ,KAAK,WAAWK,GAAG,sBACpD,cAACT,EAAA,EAAKE,MAAN,CAAYR,UAAU,cAAtB,6BACA,wBAAOgB,MAAO,CAACC,QAAS,QAAxB,UACI,cAACX,EAAA,EAAKY,KAAN,CAAWF,MAAO,CAACC,QAAS,QAASH,MAAM,KAC3C,wBAAQK,QAAS,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBC,KAAK,SAAStB,UAAU,cAAlE,2BACA,sBAAKA,UAAU,kBAAf,cArBF,mBAqBE,iBAMhB,eAACF,EAAA,EAAMyB,OAAP,WACI,wBAAQJ,QAAStB,EAAmBG,UAAU,YAA9C,mBACA,wBAAQA,UAAU,YAAlB,0BAGR,I,kBChCKwB,G,OAAgB,YAA6C,IAAjCC,EAAgC,EAAhCA,WAAY5B,EAAoB,EAApBA,kBAAoB,EAC/B6B,mBAAS,IADsB,mBAC7DC,EAD6D,KACjDC,EADiD,KASrE,OACI,sBAAK5B,UAAU,MAAf,UAII,yCACA,uBAAOA,UAAU,WAAWU,KAAK,WAAWK,GAAG,aAC/C,eAACc,EAAA,EAAD,CAAY7B,UAAU,aAAaa,QAAM,EAAzC,UACI,cAACiB,EAAA,EAAD,CACIC,SAAU,SAAAX,GAAC,OAAIQ,EAAcR,EAAEY,OAAOC,QACtCA,MAAON,EAAYjB,KAAK,OACxBV,UAAU,eACVW,YAAY,mBAChB,cAACkB,EAAA,EAAWK,OAAZ,UACG,wBACCf,QArBK,SAAAC,GACjBA,EAAEC,iBACFO,EAAc,IACdH,EAAWE,IAmBC3B,UAAU,aACVmC,QAAQ,kBAHT,yBAQP,uBAAOnC,UAAU,YAAYoC,QAAQ,WAArC,SACI,sBAAMpC,UAAU,eAEpB,qBAAIA,UAAU,OAAd,UACI,6BAAI,8CACJ,6BAAI,6CACJ,6BAAI,6CACJ,6BAAI,wBAAQmB,QAAStB,EAAjB,8B,oCCvCPwC,EAAgB,YAA2B,IAAfC,EAAc,EAAdA,YACrC,OACI,qBAAKtC,UAAU,cAAf,SACI,cAACuC,EAAA,EAAD,CAAOJ,QAAUG,EAAwB,QAAX,SAA9B,SACMA,EACD,uBAAMtC,UAAU,kBAAhB,yBAEG,cAAC,IAAD,CAAWwC,KAAK,KAAKC,OAAQH,IAC3BA,KAEL,uEAEG,mBAAGI,KAAK,sBAAR,gC,kBCbPC,EAAQ,uCAAG,sBAAAC,EAAA,0DAChBC,OAAOC,SADS,uBAElBD,OAAOE,KAAO,IAAIC,IAAKH,OAAOC,UAFZ,SAGZD,OAAOC,SAASG,SAHJ,kCAKXJ,OAAOE,KALI,iBAMlBF,OAAOE,KAAO,IAAIC,IAAKH,OAAOE,KAAKG,iBANjB,kDASX,GATW,kCAWb,GAXa,4CAAH,qDAcRC,EAAU,uCAAG,kCAAAP,EAAA,6DAChBG,EAAOF,OAAOE,KADE,SAGIA,EAAKK,IAAIC,cAHb,0CAGdC,EAHc,uBAIfA,GAJe,2CAAH,qDAOVC,EAAuB,uCAAG,sBAAAX,EAAA,0FAAH,qDAYvBY,EAAQ,uCAAG,WAAOC,GAAP,SAAAb,EAAA,0FAAH,sD,cCxBRc,IAAW,CAAEC,KAAM,iBAAkBC,KAAM,KAAMC,SAAU,UA4DzDC,MA1Df,WAAgB,IAAD,EACuBpC,mBAAS,IADhC,mBACLY,EADK,KACQyB,EADR,OAEiCrC,mBAAS,MAF1C,mBAEiBsC,GAFjB,aAGyBtC,mBAAS,IAHlC,mBAGOuC,GAHP,aAIevC,mBAAS,IAJxB,gCAKuBA,oBAAS,IALhC,mBAKL9B,EALK,KAKMsE,EALN,KAQbC,oBAAS,sBAAC,gCAAAvB,EAAA,sEACFD,IADE,uBAEcQ,IAFd,cAEFG,EAFE,gBAGeC,IAHf,cAGFE,EAHE,iBAIiBD,IAJjB,QAIFY,EAJE,OAKRL,EAAWT,GACXU,EAAYP,GACZO,EAAYI,GAPJ,4CAQP,IAEH,IAIMvE,EAAoB,WACxBqE,GAActE,IAGhB,OACE,sBAAKI,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACI,cAAC,EAAD,CAAeyB,WAXJ,SAAC4C,GAClBJ,EAAcK,OAAOD,GAAYE,SAUY1E,kBAAmBA,MAE9D,cAAC,EAAD,CAAaD,UAAWA,EAAWC,kBAAmBA,IACtD,iCACE,qBAAKG,UAAWJ,EAAW,gBAAkB,KAC7C,cAAC,EAAD,CAAe0C,YAAaA,IAC5B,cAACkC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,wCACA,2HAMJ,cAACF,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,wCACA,kICjDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c7afde2.chunk.js","sourcesContent":["    \r\nimport { Modal, Form } from 'react-bootstrap'\r\nimport './UploadModal.css'\r\n\r\nexport const UploadModal = ({ showModal, toggleUploadModal }) =>{\r\n    const fileInputName = 'NO FILE SELECTED'\r\n\r\n    return showModal ? \r\n        <Modal.Dialog className=\"upload_modal\">\r\n            <Modal.Header closeButton onHide={toggleUploadModal}>\r\n                <Modal.Title>Upload File to IPFS!</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label className=\"input_label\">File Name:</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"File Name\" />\r\n                        <Form.Label className=\"input_label\">File Type:</Form.Label>\r\n                        <Form.Check inline label=\"Video\" type=\"checkbox\" id='check_input_video' />\r\n                        <Form.Check inline label=\"Audio\" type=\"checkbox\" id='check_input_audio' />\r\n                        <Form.Check inline label=\"Image\" type=\"checkbox\" id='check_input_image' />\r\n                        <Form.Label className=\"input_label\">File To Upload:</Form.Label>\r\n                        <label style={{display: 'flex'}}>\r\n                            <Form.File style={{display: 'none'}} label=\"\" />\r\n                            <button onClick={e => e.preventDefault()} role=\"button\" className=\"select_file\"> SELECT FILE </button>\r\n                            <div className='file_input_name'> {fileInputName} </div>\r\n                        </label>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <button onClick={toggleUploadModal} className=\"close_btn\">Close</button>\r\n                <button className=\"secondary\">Upload</button>\r\n            </Modal.Footer>\r\n        </Modal.Dialog> :\r\n        ''\r\n}\r\n    ","\r\nimport { InputGroup, FormControl} from 'react-bootstrap'\r\nimport { useState } from 'react'\r\nimport './NavigationBar.css'\r\n\r\nexport const NavigationBar = function ({ searchIPFS, toggleUploadModal }){\r\n    const [ searchText, setSearchText ] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setSearchText('')\r\n        searchIPFS(searchText)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            {/* <a href=\"#\" class=\"logo\">\r\n                <img src=\"images/logo.png\"/>\r\n            </a> */}\r\n            <h1> SKEJJ </h1>\r\n            <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\"/>\r\n            <InputGroup className=\"search_box\" inline>\r\n                <FormControl \r\n                    onChange={e => setSearchText(e.target.value)} \r\n                    value={searchText} type=\"text\"\r\n                    className=\"search_input\" \r\n                    placeholder=\"Search IPFS...\" />\r\n                <InputGroup.Append >\r\n                   <button\r\n                    onClick={handleSubmit} \r\n                    className=\"search_btn\" \r\n                    variant=\"outline-primary\">\r\n                        SEARCH\r\n                   </button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n            <label className=\"menu-icon\" htmlFor=\"menu-btn\">\r\n                <span className=\"nav-icon\"></span>\r\n            </label>\r\n            <ul className=\"menu\">\r\n                <li><button >Images</button></li>\r\n                <li><button >Video</button></li>\r\n                <li><button >Music</button></li>\r\n                <li><button onClick={toggleUploadModal}>UPLOAD</button></li>\r\n            </ul>\r\n        </nav>\r\n  )\r\n}","import './EthAccountBar.css'\r\nimport Identicon from 'react-identicons';\r\nimport { Alert }  from 'react-bootstrap'\r\n\r\nexport const EthAccountBar = function ({ userAccount }){\r\n    return (\r\n        <div className=\"eth_account\">\r\n            <Alert variant={!userAccount? 'danger' : 'light'}>\r\n                 {userAccount ? \r\n                 <span className=\"account_details\">\r\n                     ETH ACCOUNT:     \r\n                    <Identicon size=\"15\" string={userAccount}/>\r\n                     {userAccount}\r\n                 </span> :\r\n                 <span>\r\n                    Not connected to ETH blockchain try \r\n                    <a href=\"https://metamask.io\"> Metamask </a>\r\n                 </span>                   \r\n                 }\r\n            </Alert> \r\n        </div>\r\n  )\r\n}","// import FileTransferContract from './ABIs/FileTransfer.json'\r\nimport Web3 from  'web3'\r\n\r\nexport const loadWeb3 = async () => {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\nexport const getAccount = async () =>{\r\n    const web3 = window.web3\r\n    // Load account\r\n    const [ account ] = await web3.eth.getAccounts()\r\n    return account\r\n}\r\n\r\nexport const getFileTransferContract = async () => {\r\n    // const web3 = window.web3\r\n    // const networkId = await web3.eth.net.getId()\r\n    // const networkData = FileTransferContract.networks[networkId]\r\n    // if(networkData) {\r\n    //   const fileTransferContract = new web3.eth.Contract(FileTransferContract.abi, networkData.address)\r\n    //   return fileTransferContract\r\n    // } else {\r\n    //   return null\r\n    // }\r\n}\r\n\r\nexport const getInbox = async (contract) =>{\r\n}\r\n","\nimport ipfsClient from 'ipfs-http-client'\nimport { useEffect, useState } from 'react'\nimport { Jumbotron, Container } from 'react-bootstrap'\nimport { UploadModal } from './components/UploadModal'\nimport { NavigationBar } from './components/NavigationBar'\nimport { EthAccountBar } from './components/EthAccountBar'\nimport {loadWeb3, getAccount, getFileTransferContract, getInbox } from './web3-helpers.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n//Declare IPFS\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\nfunction App() {\n  const [ userAccount, setAccount ] = useState('')\n  const [ fileTransferContract, setContract ] = useState(null)\n  const [ searchTerm, setSearchTerm ] = useState('')\n  const [ inbox, setInbox ] = useState({})\n  const [ showModal, setShowModal ] = useState(true)\n\n  // Initial application state\n  useEffect(async () => {\n    await loadWeb3()\n    const account = await getAccount()\n    const contract = await getFileTransferContract()\n    const ipfsInbox =  await getInbox()\n    setAccount(account)\n    setContract(contract)\n    setContract(ipfsInbox)\n  }, []);\n\n  const searchIPFS = (searchTerm) => {\n    setSearchTerm(String(searchTerm).trim())\n  }\n\n  const toggleUploadModal = () => {\n    setShowModal(!showModal)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <NavigationBar searchIPFS={searchIPFS} toggleUploadModal={toggleUploadModal}></NavigationBar>\n      </header>\n      <UploadModal showModal={showModal} toggleUploadModal={toggleUploadModal}></UploadModal>\n      <main >\n        <div className={showModal? 'modal_overlay' : ''}></div>\n        <EthAccountBar userAccount={userAccount}></EthAccountBar>\n        <Jumbotron fluid>\n          <Container>\n            <h1>Videos</h1>\n            <p>\n              This is a modified jumbotron that occupies the entire horizontal space of\n              its parent.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Jumbotron fluid>\n          <Container>\n            <h1>Photos</h1>\n            <p>\n              This is a modified jumbotron that occupies the entire horizontal space of\n              its parent.\n            </p>\n          </Container>\n        </Jumbotron>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}